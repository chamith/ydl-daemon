{"version":3,"sources":["Config.js","components/YddItem.js","components/YddItemList.js","components/YddRequest.js","components/YddRequestList.js","components/Header.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["Config","api_host_dev","getApiHost","window","location","protocol","host","replace","getEnv","YddItem","statusIcon","props","item","status","progressText","progress","toFixed","this","TableRow","key","id","TableCell","component","scope","title","Component","YddItemList","Table","size","aria-label","style","margin","width","TableHead","TableBody","items","map","YddRequest","request","state","isModalOpen","isRowOpen","className","theme","root","borderBottom","IconButton","onClick","setState","url","align","event","color","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onDelete","variant","autoFocus","YddRequestList","TableContainer","Paper","requests","requestId","useStyles","makeStyles","flexGrow","menuButton","marginRight","toolBar","backgroundColor","palette","secondary","light","Header","useState","setModalOpen","setUrl","schedule","setSchedule","anchorEl","setAnchorEl","handleClose","console","log","target","value","classes","AppBar","position","Toolbar","edge","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","Typography","TextField","label","type","name","fullWidth","onChange","FormControlLabel","control","Checkbox","checked","onAdd","App","baseUrl","deleteRequest","axios","delete","then","res","getRequests","addRequest","post","avgPrg","sum","forEach","length","get","data","setInterval","Container","Grid","container","spacing","xs","React","hostname","match","createMuiTheme","primary","red","grey","danger","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35da75da.chunk.js","sourcesContent":["class Config {\n    api_host_dev = \"localhost:9001\";\n\n    getApiHost = () => {\n        var protocol = window.location.protocol;\n\n        return protocol + '//' + window.location.host.replace('3000', '5000')\n    }\n\n    getEnv = () => {\n        return \"dev\";\n    }\n}\n\nexport default Config;","import React, { Component } from 'react'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default class YddItem extends Component {\n\n  statusIcon = () => {\n    const status = this.props.item.status;\n\n    switch (status) {\n      case 0:\n        return <HourglassEmptyIcon />;\n      case 1:\n        return <AutorenewIcon />;\n      case 2:\n        return <PauseIcon />;\n      case 3:\n        return <DoneIcon />;\n      default:\n        return <ErrorIcon />;\n    }\n  }\n\n  progressText = () => {\n    const status = this.props.item.status;\n    const progress = this.props.item.progress;\n    return status > 0 && status < 3 ? (` [${progress.toFixed(2)}%]`) : '';\n  }\n\n  render() {\n    const item = this.props.item\n    return (\n      <TableRow key={item.id}>\n        <TableCell component=\"th\" scope=\"row\">\n          {this.statusIcon()}\n        </TableCell>\n        <TableCell> {this.progressText()} {item.title}</TableCell>\n      </TableRow>)\n  }\n} \n","import React, { Component } from 'react'\nimport YddItem from './YddItem'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nexport default class YddItemList extends Component {\n    render() {\n        return (\n            <Table size=\"small\" aria-label=\"purchases\" style={{margin:'0px 0px 0px 75px', width:'75%'}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell  style={{width:'40px'}}>Status</TableCell>\n                        <TableCell>Title</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.props.items.map((item) => (\n                        <YddItem  key={item.id} item={item}/>\n                    ))}\n                </TableBody>\n            </Table>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport YddItemList from './YddItemList'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nexport default class YddRequest extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isModalOpen: false,\n      isRowOpen: false\n    }\n\n  }\n\n  statusIcon = () => {\n\n    const status = this.props.request.status;\n\n    if (status > 0 && status < 3)\n      return <AutorenewIcon />;\n    else if (status === 0)\n      return <HourglassEmptyIcon />;\n    else if (status === 3)\n      return <DoneIcon />;\n    else\n      return <ErrorIcon />;\n  }\n\n  progressText = () => {\n    const status = this.props.request.status;\n    const progress = this.props.request.progress;\n\n    return status > 0 && status < 3 ? (` [${progress.toFixed(2)}%]`) : '';\n  }\n\n\n  render() {\n    const request = this.props.request\n    const classes = theme => ({\n      root: {\n        '& > *': {\n          borderBottom: 'unset',\n        },\n      },\n    })\n    return (\n\n      <>\n        <TableRow className={classes.root}>\n          <TableCell>\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => this.setState({ isRowOpen: !this.state.isRowOpen })}>\n              {this.state.isRowOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </TableCell>\n          <TableCell>{this.statusIcon()}</TableCell>\n          <TableCell component=\"th\" scope=\"row\">{this.progressText()} {request.url}</TableCell>\n          <TableCell align=\"right\">\n            {/* <button onClick={(event) => this.setState({ isModalOpen: true })}><img alt='delete icon' width='24px' src={process.env.PUBLIC_URL + '/delete.png'} /></button> */}\n            <IconButton onClick={(event) => this.setState({ isModalOpen: true })} color=\"secondary\"><ClearIcon /></IconButton>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={this.state.isRowOpen} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <YddItemList items={request.items} />\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n        <Dialog\n          open={this.state.isModalOpen}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\">\n          <DialogTitle id=\"alert-dialog-title\">Confirm Deletion</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure to delete the request <b>'{request.url}'</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.props.onDelete(request.id)} color=\"primary\"  variant=\"outlined\" autoFocus> Yes </Button>\n            <Button onClick={() => this.setState({ isModalOpen: false })} color=\"secondary\"  variant=\"outlined\">No</Button>\n          </DialogActions>\n        </Dialog>\n\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport YddRequest from './YddRequest';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport default class YddRequestList extends Component {\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{width:'40px'}}/>\n              <TableCell style={{width:'40px'}}>Status</TableCell>\n              <TableCell>URL</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.requests.map((request) => (\n              <YddRequest key={request.id} request={request} onDelete={(requestId) => this.props.onDelete(requestId)}/>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n  }\n}\n","import React, { useState, props } from 'react'\nimport { Typography, IconButton, Checkbox, Button, TextField, Dialog, DialogActions, DialogContent, FormControlLabel, DialogTitle, Toolbar, AppBar, makeStyles, Menu, MenuItem } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: 2,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolBar: {\n    backgroundColor: theme.palette.secondary.light\n  }\n}));\n\n\nexport default function Header(props) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [url, setUrl] = useState(null);\n  const [schedule, setSchedule] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleSubmit = (event) => {\n    props.onAdd({ url: url, schedule: schedule });\n    setModalOpen(false);\n  }\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event) => {\n    console.log(event.target.value)\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <header className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>Add</MenuItem>\n            <MenuItem onClick={handleClose}>Delete</MenuItem>\n            <MenuItem onClick={handleClose}>Clear Completed Requests</MenuItem>\n          </Menu>\n          <Typography className={classes.title} variant=\"h6\" >\n            YouTube Downloader Daemon\n          </Typography>\n\n        </Toolbar></AppBar>\n      <Toolbar className={classes.toolBar}>\n        <IconButton onClick={() => setModalOpen(true)} color=\"inherit\" edge=\"start\" ><AddIcon /></IconButton>\n\n      </Toolbar>\n\n      <Dialog open={isModalOpen} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Download Request</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"url\"\n            label=\"URL\"\n            type=\"url\"\n            name=\"url\"\n            fullWidth\n            value={url}\n            onChange={event => setUrl(event.target.value)}\n          />\n          <FormControlLabel label=\"Download during off peak hours\" control={<Checkbox id=\"schedule\" name=\"schedule\" checked={!schedule} onChange={(event) => setSchedule(!event.target.checked)} />} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} variant=\"outlined\" color=\"primary\" autoFocus>\n            Submit\n          </Button>\n          <Button onClick={() => setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </header>\n  )\n}","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Config from './Config';\nimport YddRequestList from './components/YddRequestList';\nimport Header from './components/Header';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nclass App extends React.Component {\n  baseUrl = new Config().getApiHost();\n\n  deleteRequest = requestId => {\n    console.log('delete requested', requestId)\n    axios.delete(this.baseUrl + '/api/requests/' + requestId)\n      .then(res => {\n        this.getRequests()\n      })\n  }\n\n  addRequest = (request) => {\n    axios.post(this.baseUrl + '/api/requests', request)\n      .then(res => {\n        console.log('submitted')\n        this.getRequests()\n\n      })\n  }\n  avgPrg = (request) => {\n    let sum = 0;\n    request.items.forEach(item => sum += item.progress)\n    return request.items == null || request.items.length === 0 ? 0 : sum / request.items.length;\n  };\n\n  getRequests = () => {\n    axios.get(this.baseUrl + '/api/requests')\n      .then(res => {\n        const requests = res.data\n        requests.map((request) => {\n          request.avgPrg = this.avgPrg(request)\n          //console.log(`url:${request.url}, average:${request.avgPrg}`)\n          return request;\n        });\n        this.setState({ requests: requests })\n      })\n  }\n  state = {\n    requests: []\n  }\n  componentDidMount() {\n    this.getRequests();\n\n    setInterval(this.getRequests, 5000); // runs every 5 seconds.\n  }\n\n\n  render() {\n    return (\n      <Container>    \n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Header onAdd={(request) => this.addRequest(request)} />\n          </Grid>\n          <Grid item xs={12}>\n            <YddRequestList requests={this.state.requests} onDelete={(requestId) => this.deleteRequest(requestId)} />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red, grey } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: grey,\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}