{"version":3,"sources":["Config.js","components/YddItem.js","components/YddItemList.js","components/YddRequest.js","components/YddRequestList.js","components/Header.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["Config","api_host_dev","getApiHost","window","location","protocol","host","replace","getEnv","YddItem","props","item","id","title","status","progress","TableRow","key","TableCell","component","scope","statusIcon","toFixed","YddItemList","Table","size","aria-label","style","margin","width","TableBody","items","map","useRowStyles","makeStyles","root","borderBottom","padding","YddRequest","request","url","useState","isModalOpen","setModalOpen","isRowOpen","setRowOpen","classes","className","IconButton","onClick","align","event","color","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onDelete","variant","autoFocus","YddRequestList","TableContainer","Paper","TableHead","requests","requestId","useStyles","theme","flexGrow","menuButton","marginRight","toolBar","backgroundColor","palette","secondary","light","Header","setUrl","schedule","setSchedule","anchorEl","setAnchorEl","AppBar","position","Toolbar","edge","currentTarget","Menu","keepMounted","Boolean","onClose","console","log","target","value","MenuItem","onClearCompleted","Typography","TextField","label","type","name","fullWidth","onChange","FormControlLabel","control","Checkbox","checked","onAdd","App","baseUrl","deleteRequest","axios","delete","then","res","getRequests","addRequest","post","clearCompletedRequests","avgPrg","sum","forEach","length","get","data","setState","state","this","setInterval","Container","Grid","container","spacing","xs","React","Component","hostname","match","createMuiTheme","primary","red","grey","danger","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e2f5b09a.chunk.js","sourcesContent":["class Config {\n    api_host_dev = \"localhost:9001\";\n\n    getApiHost = () => {\n        var protocol = window.location.protocol;\n\n        return protocol + '//' + window.location.host.replace('3000', '5000')\n    }\n\n    getEnv = () => {\n        return \"dev\";\n    }\n}\n\nexport default Config;","import React from 'react'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default function YddItem(props) {\n  const { id, title, status, progress } = props.item;\n\n  const statusIcon = () => {\n    switch (status) {\n      case 0:\n        return <HourglassEmptyIcon />;\n      case 1:\n        return <AutorenewIcon />;\n      case 2:\n        return <PauseIcon />;\n      case 3:\n        return <DoneIcon />;\n      default:\n        return <ErrorIcon />;\n    }\n  }\n\n  const progressText = () => {\n    return status > 0 && status < 3 ? (` [${progress.toFixed(2)}%]`) : '';\n  }\n\n  return (\n    <TableRow key={id}>\n      <TableCell component=\"th\" scope=\"row\">\n        {statusIcon()}\n      </TableCell>\n      <TableCell> {progressText()} {title}</TableCell>\n    </TableRow>)\n} \n","import React from 'react'\nimport YddItem from './YddItem'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nexport default function YddItemList(props) {\n\n    return (\n        <Table size=\"small\" aria-label=\"purchases\" style={{ margin: '0px 0px 0px 75px', width: '75%' }}>\n            {/* <TableHead>\n                <TableRow>\n                    <TableCell style={{ width: '40px' }}>Status</TableCell>\n                    <TableCell>Title</TableCell>\n                </TableRow>\n            </TableHead> */}\n            <TableBody>\n                {props.items.map((item) => (\n                    <YddItem key={item.id} item={item} />\n                ))}\n            </TableBody>\n        </Table>\n    )\n}\n","import React, { useState } from 'react'\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport YddItemList from './YddItemList'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n      padding: '5px'\n    },\n  },\n});\n\nexport default function YddRequest(props) {\n  const { id, url, status, progress, items } = props.request;\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isRowOpen, setRowOpen] = useState(false);\n  const classes = useRowStyles();\n\n  const statusIcon = () => {\n\n    if (status > 0 && status < 3)\n      return <AutorenewIcon />;\n    else if (status === 0)\n      return <HourglassEmptyIcon />;\n    else if (status === 3)\n      return <DoneIcon />;\n    else\n      return <ErrorIcon />;\n  }\n\n  const progressText = () => {\n    return status > 0 && status < 3 ? (` [${progress.toFixed(2)}%]`) : '';\n  }\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setRowOpen(!isRowOpen)}>\n            {isRowOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>{statusIcon()}</TableCell>\n        <TableCell component=\"th\" scope=\"row\">{progressText()} {url}</TableCell>\n        <TableCell align=\"right\">\n          <IconButton onClick={(event) => setModalOpen(true)} color=\"secondary\"><ClearIcon /></IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={isRowOpen} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <YddItemList items={items} />\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={isModalOpen}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Confirm Deletion</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to delete the request <b>'{url}'</b>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.onDelete(id)} color=\"primary\" variant=\"outlined\" autoFocus> Yes </Button>\n          <Button onClick={() => setModalOpen(false)} color=\"secondary\" variant=\"outlined\">No</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react'\nimport YddRequest from './YddRequest';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport default function YddRequestList(props) {\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ width: '40px' }} />\n            <TableCell style={{ width: '40px' }}>Status</TableCell>\n            <TableCell>URL</TableCell>\n            <TableCell align=\"right\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.requests.map((request) => (\n            <YddRequest key={request.id} request={request} onDelete={(requestId) => props.onDelete(requestId)} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { Typography, IconButton, Checkbox, Button, TextField, Dialog, DialogActions, DialogContent, FormControlLabel, DialogTitle, Toolbar, AppBar, makeStyles, Menu, MenuItem } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: 2,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolBar: {\n    backgroundColor: theme.palette.secondary.light\n  }\n}));\n\n\nexport default function Header(props) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const [schedule, setSchedule] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleSubmit = (event) => {\n    props.onAdd({ url: url, schedule: schedule });\n    setModalOpen(false);\n  }\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event) => {\n    console.log(event.target.value)\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <header className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n            <MenuIcon />\n          </IconButton>\n          <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} >\n            <MenuItem onClick={event => { setModalOpen(true); setAnchorEl(null); }}><AddIcon />&nbsp;&nbsp;Add</MenuItem>\n            <MenuItem onClick={() => { props.onClearCompleted(); setAnchorEl(null); }}><ClearAllIcon />&nbsp;&nbsp;Clear Completed</MenuItem>\n          </Menu>\n          <Typography className={classes.title} variant=\"h6\" > YouTube Downloader Daemon </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar className={classes.toolBar}>\n        <IconButton onClick={() => setModalOpen(true)} color=\"inherit\" edge=\"start\" ><AddIcon /></IconButton>\n      </Toolbar>\n      <Dialog open={isModalOpen} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Download Request</DialogTitle>\n        <DialogContent>\n          <TextField autoFocus margin=\"dense\" id=\"url\" label=\"URL\" type=\"url\" name=\"url\" fullWidth value={url} onChange={event => setUrl(event.target.value)} />\n          <FormControlLabel label=\"Download during off peak hours\" control={<Checkbox id=\"schedule\" name=\"schedule\" checked={!schedule} onChange={(event) => setSchedule(!event.target.checked)} />} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} variant=\"outlined\" color=\"primary\" autoFocus> Submit </Button>\n          <Button onClick={() => setModalOpen(false)} variant=\"outlined\" color=\"secondary\"> Cancel </Button>\n        </DialogActions>\n      </Dialog>\n    </header>\n  )\n}","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Config from './Config';\nimport YddRequestList from './components/YddRequestList';\nimport Header from './components/Header';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nclass App extends React.Component {\n  baseUrl = new Config().getApiHost();\n\n  deleteRequest = requestId => {\n    console.log('delete requested', requestId)\n    axios.delete(this.baseUrl + '/api/requests/' + requestId)\n      .then(res => {\n        this.getRequests()\n      })\n  }\n\n  addRequest = (request) => {\n    axios.post(this.baseUrl + '/api/requests', request)\n      .then(res => {\n        console.log('submitted')\n        this.getRequests()\n\n      })\n  }\n\n  clearCompletedRequests = () => {\n    console.log('clear completed requested')\n    axios.delete(this.baseUrl + '/api/requests')\n      .then(res => {\n        this.getRequests()\n      })\n  }\n\n  avgPrg = (request) => {\n    let sum = 0;\n    request.items.forEach(item => sum += item.progress)\n    return request.items == null || request.items.length === 0 ? 0 : sum / request.items.length;\n  };\n\n  getRequests = () => {\n    axios.get(this.baseUrl + '/api/requests')\n      .then(res => {\n        const requests = res.data\n        requests.map((request) => {\n          request.avgPrg = this.avgPrg(request)\n          //console.log(`url:${request.url}, average:${request.avgPrg}`)\n          return request;\n        });\n        this.setState({ requests: requests })\n      })\n  }\n  state = {\n    requests: []\n  }\n  componentDidMount() {\n    this.getRequests();\n\n    setInterval(this.getRequests, 5000); // runs every 5 seconds.\n  }\n\n\n  render() {\n    return (\n      <Container>    \n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Header onAdd={(request) => this.addRequest(request)} onClearCompleted={()=>this.clearCompletedRequests()} />\n          </Grid>\n          <Grid item xs={12}>\n            <YddRequestList requests={this.state.requests} onDelete={(requestId) => this.deleteRequest(requestId)} />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red, grey } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: grey,\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}